volumes:
  postgres_volume:

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      RPC_ENDPOINT: ${RPC_ENDPOINT}
      PRIVATE_KEYS_PATH: ${PRIVATE_KEYS_PATH}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      OBJECT_MAPPING_ARCHIVER_URL: ${OBJECT_MAPPING_ARCHIVER_URL}
      MAX_CACHE_SIZE: ${MAX_CACHE_SIZE}
      JWT_SECRET: ${JWT_SECRET}
      FILES_GATEWAY_URL: ${FILES_GATEWAY_URL}
      FILES_GATEWAY_TOKEN: ${FILES_GATEWAY_TOKEN}
    ports:
      - "127.0.0.1:3000:3000"
  hasura:
    depends_on:
      backend:
        condition: service_healthy
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
